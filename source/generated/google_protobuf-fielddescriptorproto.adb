--  begin read only
--  Generated by the protocol buffer compiler. DO NOT EDIT!
--  source: google/protobuf/descriptor.proto
--
--  ----------------------------------------------------------------------
pragma Warnings (Off);
pragma Ada_2012;
with Google.Protobuf.Message;
with Google.Protobuf.Wire_Format;
with Google.Protobuf.IO.Coded_Output_Stream;
with Google.Protobuf.IO.Coded_Input_Stream;
with Google.Protobuf.Generated_Message_Utilities;
with Ada.Streams.Stream_IO;
with Ada.Containers.Vectors;
with Ada.Unchecked_Conversion;
with Ada.Unchecked_Deallocation;
with Interfaces;

with Google_Protobuf.FieldOptions;

package body Google_Protobuf.FieldDescriptorProto is
  ---------------------------------------------------------------------------
  --    Inherited functions and procedures from Google.Protobuf.Message    --
  ---------------------------------------------------------------------------

  procedure Clear (The_Message : in out Google_Protobuf.FieldDescriptorProto.Instance) is
  begin
    if (The_Message.Has_Bits (0 / 32) and Google.Protobuf.Wire_Format.Shift_Left (16#FF#, 0 mod 32)) /= 0 then
      if The_Message.Has_Name then
        The_Message.Clear_Has_Name;
        declare
           procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
        begin
           if The_Message.Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
              Free (The_Message.Name);
           end if;
        end;
        The_Message.Name := Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access;
      end if;
      The_Message.Number := 0;
      The_Message.Label := Google_Protobuf.FieldDescriptorProto.Label'(LABEL_OPTIONAL);
      The_Message.Type_Pb := Google_Protobuf.FieldDescriptorProto.TypeX'(TYPE_DOUBLE);
      if The_Message.Has_Type_Name then
        The_Message.Clear_Has_Type_Name;
        declare
           procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
        begin
           if The_Message.Type_Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
              Free (The_Message.Type_Name);
           end if;
        end;
        The_Message.Type_Name := Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access;
      end if;
      if The_Message.Has_Extendee then
        The_Message.Clear_Has_Extendee;
        declare
           procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
        begin
           if The_Message.Extendee /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
              Free (The_Message.Extendee);
           end if;
        end;
        The_Message.Extendee := Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access;
      end if;
      if The_Message.Has_Default_Value then
        The_Message.Clear_Has_Default_Value;
        declare
           procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
        begin
           if The_Message.Default_Value /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
              Free (The_Message.Default_Value);
           end if;
        end;
        The_Message.Default_Value := Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access;
      end if;
      The_Message.Oneof_Index := 0;
    end if;
    if (The_Message.Has_Bits (8 / 32) and Google.Protobuf.Wire_Format.Shift_Left (16#FF#, 8 mod 32)) /= 0 then
      if The_Message.Has_Json_Name then
        The_Message.Clear_Has_Json_Name;
        declare
           procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
        begin
           if The_Message.Json_Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
              Free (The_Message.Json_Name);
           end if;
        end;
        The_Message.Json_Name := Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access;
      end if;
      if The_Message.Has_Options then
        The_Message.Clear_Has_Options;
        declare
           Temp : Google.Protobuf.Message.Instance_Access := Google.Protobuf.Message.Instance_Access(The_Message.Options);
        begin
           Google.Protobuf.Message.Free (Temp);
           The_Message.Options := null;
        end;
      end if;
    end if;
    The_Message.Has_Bits := (others => 0);
  end Clear;

  procedure Copy (To   : in out Google_Protobuf.FieldDescriptorProto.Instance;
                  From : in Google_Protobuf.FieldDescriptorProto.Instance) is
  begin
     To.Clear;
     To.Merge (From);
  end Copy;

  function Get_Type_Name (The_Message : in Google_Protobuf.FieldDescriptorProto.Instance) return Google.Protobuf.Wire_Format.PB_String is
  begin
     return "google.protobuf.FieldDescriptorProto";
  end Get_Type_Name;

  function Is_Initialized (The_Message : in Google_Protobuf.FieldDescriptorProto.Instance) return Boolean is
  begin
    if The_Message.Has_Options then
       if not The_Message.Options.Is_Initialized then
          return false;
       end if;
    end if;
    return True;
  end Is_Initialized;

  procedure Merge (To : in out Google_Protobuf.FieldDescriptorProto.Instance; From : in Google_Protobuf.FieldDescriptorProto.Instance) is
  begin
    if (From.Has_Bits (0 / 32) and Google.Protobuf.Wire_Format.Shift_Left (16#FF#, 0 mod 32)) /= 0 then
      -- optional string name = 1;
      if From.Has_Name then
        To.Set_Name(From.Get_Name);
      end if;
      -- optional int32 number = 3;
      if From.Has_Number then
        To.Set_Number (From.Number);
      end if;
      -- optional .google.protobuf.FieldDescriptorProto.Label label = 4;
      if From.Has_Label then
        To.Set_Label (From.Label);
      end if;
      -- optional .google.protobuf.FieldDescriptorProto.TypeX type = 5;
      if From.Has_Type_Pb then
        To.Set_Type_Pb (From.Type_Pb);
      end if;
      -- optional string type_name = 6;
      if From.Has_Type_Name then
        To.Set_Type_Name(From.Get_Type_Name);
      end if;
      -- optional string extendee = 2;
      if From.Has_Extendee then
        To.Set_Extendee(From.Get_Extendee);
      end if;
      -- optional string default_value = 7;
      if From.Has_Default_Value then
        To.Set_Default_Value(From.Get_Default_Value);
      end if;
      -- optional int32 oneof_index = 9;
      if From.Has_Oneof_Index then
        To.Set_Oneof_Index (From.Oneof_Index);
      end if;
    end if;
    if (From.Has_Bits (8 / 32) and Google.Protobuf.Wire_Format.Shift_Left (16#FF#, 8 mod 32)) /= 0 then
      -- optional string json_name = 10;
      if From.Has_Json_Name then
        To.Set_Json_Name(From.Get_Json_Name);
      end if;
      -- optional .google.protobuf.FieldOptions options = 8;
      if From.Has_Options then
        To.Get_Options.Merge (From.Options.all);
      end if;
    end if;
  end Merge;

  function Byte_Size (The_Message : in out Google_Protobuf.FieldDescriptorProto.Instance) return Google.Protobuf.Wire_Format.PB_Object_Size is
     Total_Size : Google.Protobuf.Wire_Format.PB_Object_Size := 0;
  begin
    if (The_Message.Has_Bits (0 / 32) and Google.Protobuf.Wire_Format.Shift_Left (16#FF#, 0 mod 32)) /= 0 then
      -- optional string name = 1;
      if The_Message.Has_Name then
        Total_Size := Total_Size + 1 + Google.Protobuf.IO.Coded_Output_Stream.Compute_String_Size_No_Tag (The_Message.Name.all);
      end if;
      -- optional int32 number = 3;
      if The_Message.Has_Number then
        Total_Size := Total_Size + 1 + Google.Protobuf.IO.Coded_Output_Stream.Compute_Integer_32_Size_No_Tag (The_Message.Number);
      end if;
      -- optional .google.protobuf.FieldDescriptorProto.Label label = 4;
      if The_Message.Has_Label then
        Total_Size := Total_Size + 1 + Google.Protobuf.IO.Coded_Output_Stream.Compute_Integer_32_Size_No_Tag (Enumeration_To_PB_Int32(The_Message.Label));
      end if;
      -- optional .google.protobuf.FieldDescriptorProto.TypeX type = 5;
      if The_Message.Has_Type_Pb then
        Total_Size := Total_Size + 1 + Google.Protobuf.IO.Coded_Output_Stream.Compute_Integer_32_Size_No_Tag (Enumeration_To_PB_Int32(The_Message.Type_Pb));
      end if;
      -- optional string type_name = 6;
      if The_Message.Has_Type_Name then
        Total_Size := Total_Size + 1 + Google.Protobuf.IO.Coded_Output_Stream.Compute_String_Size_No_Tag (The_Message.Type_Name.all);
      end if;
      -- optional string extendee = 2;
      if The_Message.Has_Extendee then
        Total_Size := Total_Size + 1 + Google.Protobuf.IO.Coded_Output_Stream.Compute_String_Size_No_Tag (The_Message.Extendee.all);
      end if;
      -- optional string default_value = 7;
      if The_Message.Has_Default_Value then
        Total_Size := Total_Size + 1 + Google.Protobuf.IO.Coded_Output_Stream.Compute_String_Size_No_Tag (The_Message.Default_Value.all);
      end if;
      -- optional int32 oneof_index = 9;
      if The_Message.Has_Oneof_Index then
        Total_Size := Total_Size + 1 + Google.Protobuf.IO.Coded_Output_Stream.Compute_Integer_32_Size_No_Tag (The_Message.Oneof_Index);
      end if;
    end if;
    if (The_Message.Has_Bits (8 / 32) and Google.Protobuf.Wire_Format.Shift_Left (16#FF#, 8 mod 32)) /= 0 then
      -- optional string json_name = 10;
      if The_Message.Has_Json_Name then
        Total_Size := Total_Size + 1 + Google.Protobuf.IO.Coded_Output_Stream.Compute_String_Size_No_Tag (The_Message.Json_Name.all);
      end if;
      -- optional .google.protobuf.FieldOptions options = 8;
      if The_Message.Has_Options then
        Total_Size := Total_Size + 1 + Google.Protobuf.IO.Coded_Output_Stream.Compute_Message_Size_No_Tag (The_Message.Options.all);
      end if;
    end if;
    The_Message.Cached_Size := Total_Size;
    return Total_Size;
  end Byte_Size;

  procedure Serialize_With_Cached_Sizes
     (The_Message   : in Google_Protobuf.FieldDescriptorProto.Instance;
      The_Coded_Output_Stream : in Google.Protobuf.IO.Coded_Output_Stream.Instance) is
  begin
    -- optional string name = 1;
    if The_Message.Has_Name then
      The_Coded_Output_Stream.Write_String (1, The_Message.Name.all);
    end if;
    -- optional string extendee = 2;
    if The_Message.Has_Extendee then
      The_Coded_Output_Stream.Write_String (2, The_Message.Extendee.all);
    end if;
    -- optional int32 number = 3;
    if The_Message.Has_Number then
      Google.Protobuf.IO.Coded_Output_Stream.Write_Integer_32 (The_Coded_Output_Stream, 3, The_Message.Number);
    end if;
    -- optional .google.protobuf.FieldDescriptorProto.Label label = 4;
    if The_Message.Has_Label then
      Google.Protobuf.IO.Coded_Output_Stream.Write_Integer_32 (The_Coded_Output_Stream, 4, Enumeration_To_PB_Int32(The_Message.Label));
    end if;
    -- optional .google.protobuf.FieldDescriptorProto.TypeX type = 5;
    if The_Message.Has_Type_Pb then
      Google.Protobuf.IO.Coded_Output_Stream.Write_Integer_32 (The_Coded_Output_Stream, 5, Enumeration_To_PB_Int32(The_Message.Type_Pb));
    end if;
    -- optional string type_name = 6;
    if The_Message.Has_Type_Name then
      The_Coded_Output_Stream.Write_String (6, The_Message.Type_Name.all);
    end if;
    -- optional string default_value = 7;
    if The_Message.Has_Default_Value then
      The_Coded_Output_Stream.Write_String (7, The_Message.Default_Value.all);
    end if;
    -- optional .google.protobuf.FieldOptions options = 8;
    if The_Message.Has_Options then
      The_Coded_Output_Stream.Write_Message (8, The_Message.Options.all);
    end if;
    -- optional int32 oneof_index = 9;
    if The_Message.Has_Oneof_Index then
      Google.Protobuf.IO.Coded_Output_Stream.Write_Integer_32 (The_Coded_Output_Stream, 9, The_Message.Oneof_Index);
    end if;
    -- optional string json_name = 10;
    if The_Message.Has_Json_Name then
      The_Coded_Output_Stream.Write_String (10, The_Message.Json_Name.all);
    end if;
  end Serialize_With_Cached_Sizes;

  procedure Merge_Partial_From_Coded_Input_Stream
     (The_Message   : in out Google_Protobuf.FieldDescriptorProto.Instance;
      The_Coded_Input_Stream : in out Google.Protobuf.IO.Coded_Input_Stream.Instance) is

     Tag : Google.Protobuf.Wire_Format.PB_UInt32;
  begin
    Tag := The_Coded_Input_Stream.Read_Tag;
    while Tag /= 0 loop
      case Google.Protobuf.Wire_Format.Get_Tag_Field_Number (Tag) is
      -- optional string name = 1;
      when 1 =>
        if Google.Protobuf.Wire_Format.Get_Tag_Wire_Type (Tag) =
          Google.Protobuf.Wire_Format.LENGTH_DELIMITED then
          declare
             procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
          begin
             if The_Message.Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
                Free (The_Message.Name);
             end if;
          end;
          The_Message.Set_Has_Name;
          The_Message.Name := The_Coded_Input_Stream.Read_String;
        end if;
      -- optional string extendee = 2;
      when 2 =>
        if Google.Protobuf.Wire_Format.Get_Tag_Wire_Type (Tag) =
          Google.Protobuf.Wire_Format.LENGTH_DELIMITED then
          declare
             procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
          begin
             if The_Message.Extendee /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
                Free (The_Message.Extendee);
             end if;
          end;
          The_Message.Set_Has_Extendee;
          The_Message.Extendee := The_Coded_Input_Stream.Read_String;
        end if;
      -- optional int32 number = 3;
      when 3 =>
        if Google.Protobuf.Wire_Format.Get_Tag_Wire_Type (Tag) =
          Google.Protobuf.Wire_Format.VARINT then
          The_Message.Number := The_Coded_Input_Stream.Read_Integer_32;
          The_Message.Set_Has_Number;
        end if;
      -- optional .google.protobuf.FieldDescriptorProto.Label label = 4;
      when 4 =>
        if Google.Protobuf.Wire_Format.Get_Tag_Wire_Type (Tag) =
          Google.Protobuf.Wire_Format.VARINT then
          The_Message.Label := PB_Int32_To_Enumeration (The_Coded_Input_Stream.Read_Integer_32);
          The_Message.Set_Has_Label;
        end if;
      -- optional .google.protobuf.FieldDescriptorProto.TypeX type = 5;
      when 5 =>
        if Google.Protobuf.Wire_Format.Get_Tag_Wire_Type (Tag) =
          Google.Protobuf.Wire_Format.VARINT then
          The_Message.Type_Pb := PB_Int32_To_Enumeration (The_Coded_Input_Stream.Read_Integer_32);
          The_Message.Set_Has_Type_Pb;
        end if;
      -- optional string type_name = 6;
      when 6 =>
        if Google.Protobuf.Wire_Format.Get_Tag_Wire_Type (Tag) =
          Google.Protobuf.Wire_Format.LENGTH_DELIMITED then
          declare
             procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
          begin
             if The_Message.Type_Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
                Free (The_Message.Type_Name);
             end if;
          end;
          The_Message.Set_Has_Type_Name;
          The_Message.Type_Name := The_Coded_Input_Stream.Read_String;
        end if;
      -- optional string default_value = 7;
      when 7 =>
        if Google.Protobuf.Wire_Format.Get_Tag_Wire_Type (Tag) =
          Google.Protobuf.Wire_Format.LENGTH_DELIMITED then
          declare
             procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
          begin
             if The_Message.Default_Value /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
                Free (The_Message.Default_Value);
             end if;
          end;
          The_Message.Set_Has_Default_Value;
          The_Message.Default_Value := The_Coded_Input_Stream.Read_String;
        end if;
      -- optional .google.protobuf.FieldOptions options = 8;
      when 8 =>
        if Google.Protobuf.Wire_Format.Get_Tag_Wire_Type (Tag) =
          Google.Protobuf.Wire_Format.LENGTH_DELIMITED then
          The_Coded_Input_Stream.Read_Message (The_Message.Get_Options.all);
        end if;
      -- optional int32 oneof_index = 9;
      when 9 =>
        if Google.Protobuf.Wire_Format.Get_Tag_Wire_Type (Tag) =
          Google.Protobuf.Wire_Format.VARINT then
          The_Message.Oneof_Index := The_Coded_Input_Stream.Read_Integer_32;
          The_Message.Set_Has_Oneof_Index;
        end if;
      -- optional string json_name = 10;
      when 10 =>
        if Google.Protobuf.Wire_Format.Get_Tag_Wire_Type (Tag) =
          Google.Protobuf.Wire_Format.LENGTH_DELIMITED then
          declare
             procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
          begin
             if The_Message.Json_Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
                Free (The_Message.Json_Name);
             end if;
          end;
          The_Message.Set_Has_Json_Name;
          The_Message.Json_Name := The_Coded_Input_Stream.Read_String;
        end if;
      when others =>
        declare
           Dummy : Google.Protobuf.Wire_Format.PB_Bool with Unreferenced;
        begin
           Dummy := The_Coded_Input_Stream.Skip_Field (Tag);
           return;
        end;
      end case;
      Tag := The_Coded_Input_Stream.Read_Tag;
    end loop;
  end Merge_Partial_From_Coded_Input_Stream;

  function Get_Cached_Size
     (The_Message : in Google_Protobuf.FieldDescriptorProto.Instance) return Google.Protobuf.Wire_Format.PB_Object_Size is
  begin
     return The_Message.Cached_Size;
  end Get_Cached_Size;

  overriding
  procedure Finalize (The_Message : in out Google_Protobuf.FieldDescriptorProto.Instance) is
  begin
    declare
       procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
    begin
       if The_Message.Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
          Free (The_Message.Name);
       end if;
    end;
    declare
       procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
    begin
       if The_Message.Type_Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
          Free (The_Message.Type_Name);
       end if;
    end;
    declare
       procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
    begin
       if The_Message.Extendee /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
          Free (The_Message.Extendee);
       end if;
    end;
    declare
       procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
    begin
       if The_Message.Default_Value /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
          Free (The_Message.Default_Value);
       end if;
    end;
    declare
       procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
    begin
       if The_Message.Json_Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
          Free (The_Message.Json_Name);
       end if;
    end;
    declare
       Temp : Google.Protobuf.Message.Instance_Access := Google.Protobuf.Message.Instance_Access(The_Message.Options);
    begin
       Google.Protobuf.Message.Free (Temp);
       The_Message.Options := null;
    end;
  end Finalize;

  ---------------------------------------------------------------------------
  --                  Field accessor definitions                           --
  ---------------------------------------------------------------------------

  -- optional string name = 1;
  function Has_Name
     (The_Message : in FieldDescriptorProto.Instance) return Boolean is
  begin
     return (The_Message.Has_Bits(0) and 16#00000001#) /= 0;
  end Has_Name;

  procedure Set_Has_Name
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) or 16#00000001#;
  end Set_Has_Name;

  procedure Clear_Has_Name
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) and (not 16#00000001#);
  end Clear_Has_Name;

  procedure Clear_Name
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
    The_Message.Clear_Has_Name;
    declare
       procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
    begin
       if The_Message.Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
          Free (The_Message.Name);
       end if;
    end;
    The_Message.Name := Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access;
    The_Message.Clear_Has_Name;
  end Clear_Name;

  function Get_Name
     (The_Message : in FieldDescriptorProto.Instance) return Google.Protobuf.Wire_Format.PB_String is
  begin
     return The_Message.Name.all;
  end Get_Name;

  function Get_Name
     (The_Message : in out FieldDescriptorProto.Instance;
     Size        : in Integer := -1) return Google.Protobuf.Wire_Format.PB_String_Access is
  begin
     The_Message.Set_Has_Name;
     if Size >= 0 then
  declare
     procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
  begin
     if The_Message.Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        Free (The_Message.Name);
     end if;
  end;
         The_Message.Name := new Google.Protobuf.Wire_Format.PB_String'(1 .. Size => Character'Val (0));
         return The_Message.Name;
     end if;

     if The_Message.Name = Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        The_Message.Name := new String'(Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING);
      end if;
      return The_Message.Name;
  end Get_Name;

  procedure Set_Name
     (The_Message : in out FieldDescriptorProto.Instance;
      Value       : in Google.Protobuf.Wire_Format.PB_String) is
  begin
     The_Message.Set_Has_Name;
     if The_Message.Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access and then Value'Length = The_Message.Name.all'Length then
        The_Message.Name.all := Value;
     else
  declare
     procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
  begin
     if The_Message.Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        Free (The_Message.Name);
     end if;
  end;
        The_Message.Name := new Google.Protobuf.Wire_Format.PB_String'(Value);
     end if;
  end Set_Name;

  function Release_Name
     (The_Message : in out FieldDescriptorProto.Instance) return Google.Protobuf.Wire_Format.PB_String_Access is
  begin
     The_Message.Clear_Has_Name;
     if The_Message.Name = Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        return null;
     else
        declare
           Temp : Google.Protobuf.Wire_Format.PB_String_Access := The_Message.Name;
        begin
           The_Message.Name := Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access;
           return Temp;
        end;
     end if;
  end Release_Name;

  -- optional int32 number = 3;
  function Has_Number
     (The_Message : in FieldDescriptorProto.Instance) return Boolean is
  begin
     return (The_Message.Has_Bits(0) and 16#00000002#) /= 0;
  end Has_Number;

  procedure Set_Has_Number
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) or 16#00000002#;
  end Set_Has_Number;

  procedure Clear_Has_Number
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) and (not 16#00000002#);
  end Clear_Has_Number;

  procedure Clear_Number
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
    The_Message.Number := 0;
    The_Message.Clear_Has_Number;
  end Clear_Number;

  function Get_Number (The_Message : in FieldDescriptorProto.Instance) return Google.Protobuf.Wire_Format.PB_Int32 is
  begin
     return The_Message.Number;
  end Get_Number;

  procedure Set_Number (The_Message : in out FieldDescriptorProto.Instance; Value : in Google.Protobuf.Wire_Format.PB_Int32) is
  begin
     The_Message.Set_Has_Number;
     The_Message.Number := Value;
  end Set_Number;

  -- optional .google.protobuf.FieldDescriptorProto.Label label = 4;
  function Has_Label
     (The_Message : in FieldDescriptorProto.Instance) return Boolean is
  begin
     return (The_Message.Has_Bits(0) and 16#00000004#) /= 0;
  end Has_Label;

  procedure Set_Has_Label
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) or 16#00000004#;
  end Set_Has_Label;

  procedure Clear_Has_Label
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) and (not 16#00000004#);
  end Clear_Has_Label;

  procedure Clear_Label
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
    The_Message.Label := Google_Protobuf.FieldDescriptorProto.Label'(LABEL_OPTIONAL);
    The_Message.Clear_Has_Label;
  end Clear_Label;

  function Get_Label (The_Message : in FieldDescriptorProto.Instance) return Google_Protobuf.FieldDescriptorProto.Label is
  begin
     return The_Message.Label;
  end Get_Label;

  procedure Set_Label (The_Message : in out FieldDescriptorProto.Instance;
                        Value       : in Google_Protobuf.FieldDescriptorProto.Label) is
  begin
     Set_Has_Label (The_Message);
     The_Message.Label := Value;
  end Set_Label;

  -- optional .google.protobuf.FieldDescriptorProto.TypeX type = 5;
  function Has_Type_Pb
     (The_Message : in FieldDescriptorProto.Instance) return Boolean is
  begin
     return (The_Message.Has_Bits(0) and 16#00000008#) /= 0;
  end Has_Type_Pb;

  procedure Set_Has_Type_Pb
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) or 16#00000008#;
  end Set_Has_Type_Pb;

  procedure Clear_Has_Type_Pb
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) and (not 16#00000008#);
  end Clear_Has_Type_Pb;

  procedure Clear_Type_Pb
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
    The_Message.Type_Pb := Google_Protobuf.FieldDescriptorProto.TypeX'(TYPE_DOUBLE);
    The_Message.Clear_Has_Type_Pb;
  end Clear_Type_Pb;

  function Get_Type_Pb (The_Message : in FieldDescriptorProto.Instance) return Google_Protobuf.FieldDescriptorProto.TypeX is
  begin
     return The_Message.Type_Pb;
  end Get_Type_Pb;

  procedure Set_Type_Pb (The_Message : in out FieldDescriptorProto.Instance;
                        Value       : in Google_Protobuf.FieldDescriptorProto.TypeX) is
  begin
     Set_Has_Type_Pb (The_Message);
     The_Message.Type_Pb := Value;
  end Set_Type_Pb;

  -- optional string type_name = 6;
  function Has_Type_Name
     (The_Message : in FieldDescriptorProto.Instance) return Boolean is
  begin
     return (The_Message.Has_Bits(0) and 16#00000010#) /= 0;
  end Has_Type_Name;

  procedure Set_Has_Type_Name
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) or 16#00000010#;
  end Set_Has_Type_Name;

  procedure Clear_Has_Type_Name
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) and (not 16#00000010#);
  end Clear_Has_Type_Name;

  procedure Clear_Type_Name
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
    The_Message.Clear_Has_Type_Name;
    declare
       procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
    begin
       if The_Message.Type_Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
          Free (The_Message.Type_Name);
       end if;
    end;
    The_Message.Type_Name := Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access;
    The_Message.Clear_Has_Type_Name;
  end Clear_Type_Name;

  function Get_TypeX_Name
     (The_Message : in FieldDescriptorProto.Instance) return Google.Protobuf.Wire_Format.PB_String is
  begin
     return The_Message.Type_Name.all;
  end Get_TypeX_Name;

  function Get_Type_Name
     (The_Message : in out FieldDescriptorProto.Instance;
     Size        : in Integer := -1) return Google.Protobuf.Wire_Format.PB_String_Access is
  begin
     The_Message.Set_Has_Type_Name;
     if Size >= 0 then
  declare
     procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
  begin
     if The_Message.Type_Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        Free (The_Message.Type_Name);
     end if;
  end;
         The_Message.Type_Name := new Google.Protobuf.Wire_Format.PB_String'(1 .. Size => Character'Val (0));
         return The_Message.Type_Name;
     end if;

     if The_Message.Type_Name = Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        The_Message.Type_Name := new String'(Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING);
      end if;
      return The_Message.Type_Name;
  end Get_Type_Name;

  procedure Set_Type_Name
     (The_Message : in out FieldDescriptorProto.Instance;
      Value       : in Google.Protobuf.Wire_Format.PB_String) is
  begin
     The_Message.Set_Has_Type_Name;
     if The_Message.Type_Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access and then Value'Length = The_Message.Type_Name.all'Length then
        The_Message.Type_Name.all := Value;
     else
  declare
     procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
  begin
     if The_Message.Type_Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        Free (The_Message.Type_Name);
     end if;
  end;
        The_Message.Type_Name := new Google.Protobuf.Wire_Format.PB_String'(Value);
     end if;
  end Set_Type_Name;

  function Release_Type_Name
     (The_Message : in out FieldDescriptorProto.Instance) return Google.Protobuf.Wire_Format.PB_String_Access is
  begin
     The_Message.Clear_Has_Type_Name;
     if The_Message.Type_Name = Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        return null;
     else
        declare
           Temp : Google.Protobuf.Wire_Format.PB_String_Access := The_Message.Type_Name;
        begin
           The_Message.Type_Name := Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access;
           return Temp;
        end;
     end if;
  end Release_Type_Name;

  -- optional string extendee = 2;
  function Has_Extendee
     (The_Message : in FieldDescriptorProto.Instance) return Boolean is
  begin
     return (The_Message.Has_Bits(0) and 16#00000020#) /= 0;
  end Has_Extendee;

  procedure Set_Has_Extendee
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) or 16#00000020#;
  end Set_Has_Extendee;

  procedure Clear_Has_Extendee
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) and (not 16#00000020#);
  end Clear_Has_Extendee;

  procedure Clear_Extendee
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
    The_Message.Clear_Has_Extendee;
    declare
       procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
    begin
       if The_Message.Extendee /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
          Free (The_Message.Extendee);
       end if;
    end;
    The_Message.Extendee := Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access;
    The_Message.Clear_Has_Extendee;
  end Clear_Extendee;

  function Get_Extendee
     (The_Message : in FieldDescriptorProto.Instance) return Google.Protobuf.Wire_Format.PB_String is
  begin
     return The_Message.Extendee.all;
  end Get_Extendee;

  function Get_Extendee
     (The_Message : in out FieldDescriptorProto.Instance;
     Size        : in Integer := -1) return Google.Protobuf.Wire_Format.PB_String_Access is
  begin
     The_Message.Set_Has_Extendee;
     if Size >= 0 then
  declare
     procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
  begin
     if The_Message.Extendee /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        Free (The_Message.Extendee);
     end if;
  end;
         The_Message.Extendee := new Google.Protobuf.Wire_Format.PB_String'(1 .. Size => Character'Val (0));
         return The_Message.Extendee;
     end if;

     if The_Message.Extendee = Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        The_Message.Extendee := new String'(Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING);
      end if;
      return The_Message.Extendee;
  end Get_Extendee;

  procedure Set_Extendee
     (The_Message : in out FieldDescriptorProto.Instance;
      Value       : in Google.Protobuf.Wire_Format.PB_String) is
  begin
     The_Message.Set_Has_Extendee;
     if The_Message.Extendee /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access and then Value'Length = The_Message.Extendee.all'Length then
        The_Message.Extendee.all := Value;
     else
  declare
     procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
  begin
     if The_Message.Extendee /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        Free (The_Message.Extendee);
     end if;
  end;
        The_Message.Extendee := new Google.Protobuf.Wire_Format.PB_String'(Value);
     end if;
  end Set_Extendee;

  function Release_Extendee
     (The_Message : in out FieldDescriptorProto.Instance) return Google.Protobuf.Wire_Format.PB_String_Access is
  begin
     The_Message.Clear_Has_Extendee;
     if The_Message.Extendee = Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        return null;
     else
        declare
           Temp : Google.Protobuf.Wire_Format.PB_String_Access := The_Message.Extendee;
        begin
           The_Message.Extendee := Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access;
           return Temp;
        end;
     end if;
  end Release_Extendee;

  -- optional string default_value = 7;
  function Has_Default_Value
     (The_Message : in FieldDescriptorProto.Instance) return Boolean is
  begin
     return (The_Message.Has_Bits(0) and 16#00000040#) /= 0;
  end Has_Default_Value;

  procedure Set_Has_Default_Value
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) or 16#00000040#;
  end Set_Has_Default_Value;

  procedure Clear_Has_Default_Value
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) and (not 16#00000040#);
  end Clear_Has_Default_Value;

  procedure Clear_Default_Value
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
    The_Message.Clear_Has_Default_Value;
    declare
       procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
    begin
       if The_Message.Default_Value /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
          Free (The_Message.Default_Value);
       end if;
    end;
    The_Message.Default_Value := Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access;
    The_Message.Clear_Has_Default_Value;
  end Clear_Default_Value;

  function Get_Default_Value
     (The_Message : in FieldDescriptorProto.Instance) return Google.Protobuf.Wire_Format.PB_String is
  begin
     return The_Message.Default_Value.all;
  end Get_Default_Value;

  function Get_Default_Value
     (The_Message : in out FieldDescriptorProto.Instance;
     Size        : in Integer := -1) return Google.Protobuf.Wire_Format.PB_String_Access is
  begin
     The_Message.Set_Has_Default_Value;
     if Size >= 0 then
  declare
     procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
  begin
     if The_Message.Default_Value /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        Free (The_Message.Default_Value);
     end if;
  end;
         The_Message.Default_Value := new Google.Protobuf.Wire_Format.PB_String'(1 .. Size => Character'Val (0));
         return The_Message.Default_Value;
     end if;

     if The_Message.Default_Value = Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        The_Message.Default_Value := new String'(Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING);
      end if;
      return The_Message.Default_Value;
  end Get_Default_Value;

  procedure Set_Default_Value
     (The_Message : in out FieldDescriptorProto.Instance;
      Value       : in Google.Protobuf.Wire_Format.PB_String) is
  begin
     The_Message.Set_Has_Default_Value;
     if The_Message.Default_Value /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access and then Value'Length = The_Message.Default_Value.all'Length then
        The_Message.Default_Value.all := Value;
     else
  declare
     procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
  begin
     if The_Message.Default_Value /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        Free (The_Message.Default_Value);
     end if;
  end;
        The_Message.Default_Value := new Google.Protobuf.Wire_Format.PB_String'(Value);
     end if;
  end Set_Default_Value;

  function Release_Default_Value
     (The_Message : in out FieldDescriptorProto.Instance) return Google.Protobuf.Wire_Format.PB_String_Access is
  begin
     The_Message.Clear_Has_Default_Value;
     if The_Message.Default_Value = Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        return null;
     else
        declare
           Temp : Google.Protobuf.Wire_Format.PB_String_Access := The_Message.Default_Value;
        begin
           The_Message.Default_Value := Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access;
           return Temp;
        end;
     end if;
  end Release_Default_Value;

  -- optional int32 oneof_index = 9;
  function Has_Oneof_Index
     (The_Message : in FieldDescriptorProto.Instance) return Boolean is
  begin
     return (The_Message.Has_Bits(0) and 16#00000080#) /= 0;
  end Has_Oneof_Index;

  procedure Set_Has_Oneof_Index
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) or 16#00000080#;
  end Set_Has_Oneof_Index;

  procedure Clear_Has_Oneof_Index
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) and (not 16#00000080#);
  end Clear_Has_Oneof_Index;

  procedure Clear_Oneof_Index
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
    The_Message.Oneof_Index := 0;
    The_Message.Clear_Has_Oneof_Index;
  end Clear_Oneof_Index;

  function Get_Oneof_Index (The_Message : in FieldDescriptorProto.Instance) return Google.Protobuf.Wire_Format.PB_Int32 is
  begin
     return The_Message.Oneof_Index;
  end Get_Oneof_Index;

  procedure Set_Oneof_Index (The_Message : in out FieldDescriptorProto.Instance; Value : in Google.Protobuf.Wire_Format.PB_Int32) is
  begin
     The_Message.Set_Has_Oneof_Index;
     The_Message.Oneof_Index := Value;
  end Set_Oneof_Index;

  -- optional string json_name = 10;
  function Has_Json_Name
     (The_Message : in FieldDescriptorProto.Instance) return Boolean is
  begin
     return (The_Message.Has_Bits(0) and 16#00000100#) /= 0;
  end Has_Json_Name;

  procedure Set_Has_Json_Name
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) or 16#00000100#;
  end Set_Has_Json_Name;

  procedure Clear_Has_Json_Name
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) and (not 16#00000100#);
  end Clear_Has_Json_Name;

  procedure Clear_Json_Name
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
    The_Message.Clear_Has_Json_Name;
    declare
       procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
    begin
       if The_Message.Json_Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
          Free (The_Message.Json_Name);
       end if;
    end;
    The_Message.Json_Name := Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access;
    The_Message.Clear_Has_Json_Name;
  end Clear_Json_Name;

  function Get_Json_Name
     (The_Message : in FieldDescriptorProto.Instance) return Google.Protobuf.Wire_Format.PB_String is
  begin
     return The_Message.Json_Name.all;
  end Get_Json_Name;

  function Get_Json_Name
     (The_Message : in out FieldDescriptorProto.Instance;
     Size        : in Integer := -1) return Google.Protobuf.Wire_Format.PB_String_Access is
  begin
     The_Message.Set_Has_Json_Name;
     if Size >= 0 then
  declare
     procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
  begin
     if The_Message.Json_Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        Free (The_Message.Json_Name);
     end if;
  end;
         The_Message.Json_Name := new Google.Protobuf.Wire_Format.PB_String'(1 .. Size => Character'Val (0));
         return The_Message.Json_Name;
     end if;

     if The_Message.Json_Name = Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        The_Message.Json_Name := new String'(Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING);
      end if;
      return The_Message.Json_Name;
  end Get_Json_Name;

  procedure Set_Json_Name
     (The_Message : in out FieldDescriptorProto.Instance;
      Value       : in Google.Protobuf.Wire_Format.PB_String) is
  begin
     The_Message.Set_Has_Json_Name;
     if The_Message.Json_Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access and then Value'Length = The_Message.Json_Name.all'Length then
        The_Message.Json_Name.all := Value;
     else
  declare
     procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
  begin
     if The_Message.Json_Name /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        Free (The_Message.Json_Name);
     end if;
  end;
        The_Message.Json_Name := new Google.Protobuf.Wire_Format.PB_String'(Value);
     end if;
  end Set_Json_Name;

  function Release_Json_Name
     (The_Message : in out FieldDescriptorProto.Instance) return Google.Protobuf.Wire_Format.PB_String_Access is
  begin
     The_Message.Clear_Has_Json_Name;
     if The_Message.Json_Name = Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        return null;
     else
        declare
           Temp : Google.Protobuf.Wire_Format.PB_String_Access := The_Message.Json_Name;
        begin
           The_Message.Json_Name := Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access;
           return Temp;
        end;
     end if;
  end Release_Json_Name;

  -- optional .google.protobuf.FieldOptions options = 8;
  function Has_Options
     (The_Message : in FieldDescriptorProto.Instance) return Boolean is
  begin
     return (The_Message.Has_Bits(0) and 16#00000200#) /= 0;
  end Has_Options;

  procedure Set_Has_Options
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) or 16#00000200#;
  end Set_Has_Options;

  procedure Clear_Has_Options
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) and (not 16#00000200#);
  end Clear_Has_Options;

  procedure Clear_Options
     (The_Message : in out FieldDescriptorProto.Instance) is
  begin
    The_Message.Clear_Has_Options;
    declare
       Temp : Google.Protobuf.Message.Instance_Access := Google.Protobuf.Message.Instance_Access(The_Message.Options);
    begin
       Google.Protobuf.Message.Free (Temp);
       The_Message.Options := null;
    end;
    The_Message.Clear_Has_Options;
  end Clear_Options;

  function Get_Options (The_Message : in out FieldDescriptorProto.Instance) return access Google_Protobuf.FieldOptions.Instance is
     use type Google_Protobuf.FieldOptions.FieldOptions_Access;
  begin
     The_Message.Set_Has_Options;
     if The_Message.Options = null then
        The_Message.Options := Google_Protobuf.FieldOptions.FieldOptions_Access'(new Google_Protobuf.FieldOptions.Instance);
     end if;
     return The_Message.Options;
  end Get_Options;

  function Release_Options (The_Message : in out FieldDescriptorProto.Instance) return access Google_Protobuf.FieldOptions.Instance is
     Temp : access Google_Protobuf.FieldOptions.Instance;
  begin
     The_Message.Clear_Has_Options;
     Temp := The_Message.Options;
     The_Message.Options := null;
     return Temp;
  end Release_Options;

  procedure Set_Options
     (The_Message : in out FieldDescriptorProto.Instance;
      Value       : in Google_Protobuf.FieldOptions.FieldOptions_Access) is
     use type Google_Protobuf.FieldOptions.FieldOptions_Access;
     Temp : Google.Protobuf.Message.Instance_Access := Google.Protobuf.Message.Instance_Access (The_Message.Options);
  begin
     Google.Protobuf.Message.Free (Temp);
     The_Message.Options := Value;
     if The_Message.Options /= null then
        The_Message.Set_Has_Options;
     else
        The_Message.Clear_Has_Options;
     end if;
  end Set_Options;

end Google_Protobuf.FieldDescriptorProto;
--  end read only
