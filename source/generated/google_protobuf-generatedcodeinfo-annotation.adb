--  begin read only
--  Generated by the protocol buffer compiler. DO NOT EDIT!
--  source: google/protobuf/descriptor.proto
--
--  ----------------------------------------------------------------------
pragma Warnings (Off);
pragma Ada_2012;
with Google.Protobuf.Message;
with Google.Protobuf.Wire_Format;
with Google.Protobuf.IO.Coded_Output_Stream;
with Google.Protobuf.IO.Coded_Input_Stream;
with Google.Protobuf.Generated_Message_Utilities;
with Ada.Streams.Stream_IO;
with Ada.Containers.Vectors;
with Ada.Unchecked_Conversion;
with Ada.Unchecked_Deallocation;
with Interfaces;

package body Google_Protobuf.GeneratedCodeInfo.Annotation is
  ---------------------------------------------------------------------------
  --    Inherited functions and procedures from Google.Protobuf.Message    --
  ---------------------------------------------------------------------------

  procedure Clear (The_Message : in out Google_Protobuf.GeneratedCodeInfo.Annotation.Instance) is
  begin
    if (The_Message.Has_Bits (1 / 32) and Google.Protobuf.Wire_Format.Shift_Left (16#FF#, 1 mod 32)) /= 0 then
      if The_Message.Has_Source_File then
        The_Message.Clear_Has_Source_File;
        declare
           procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
        begin
           if The_Message.Source_File /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
              Free (The_Message.Source_File);
           end if;
        end;
        The_Message.Source_File := Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access;
      end if;
      The_Message.Begin_Pb := 0;
      The_Message.End_Pb := 0;
    end if;
    The_Message.Path.Clear;
    The_Message.Has_Bits := (others => 0);
  end Clear;

  procedure Copy (To   : in out Google_Protobuf.GeneratedCodeInfo.Annotation.Instance;
                  From : in Google_Protobuf.GeneratedCodeInfo.Annotation.Instance) is
  begin
     To.Clear;
     To.Merge (From);
  end Copy;

  function Get_Type_Name (The_Message : in Google_Protobuf.GeneratedCodeInfo.Annotation.Instance) return Google.Protobuf.Wire_Format.PB_String is
  begin
     return "google.protobuf.GeneratedCodeInfo.Annotation";
  end Get_Type_Name;

  function Is_Initialized (The_Message : in Google_Protobuf.GeneratedCodeInfo.Annotation.Instance) return Boolean is
  begin
    return True;
  end Is_Initialized;

  procedure Merge (To : in out Google_Protobuf.GeneratedCodeInfo.Annotation.Instance; From : in Google_Protobuf.GeneratedCodeInfo.Annotation.Instance) is
  begin
    To.Path.Append(From.Path);
    if (From.Has_Bits (1 / 32) and Google.Protobuf.Wire_Format.Shift_Left (16#FF#, 1 mod 32)) /= 0 then
      -- optional string source_file = 2;
      if From.Has_Source_File then
        To.Set_Source_File(From.Get_Source_File);
      end if;
      -- optional int32 begin = 3;
      if From.Has_Begin_Pb then
        To.Set_Begin_Pb (From.Begin_Pb);
      end if;
      -- optional int32 end = 4;
      if From.Has_End_Pb then
        To.Set_End_Pb (From.End_Pb);
      end if;
    end if;
  end Merge;

  function Byte_Size (The_Message : in out Google_Protobuf.GeneratedCodeInfo.Annotation.Instance) return Google.Protobuf.Wire_Format.PB_Object_Size is
     Total_Size : Google.Protobuf.Wire_Format.PB_Object_Size := 0;
  begin
    if (The_Message.Has_Bits (1 / 32) and Google.Protobuf.Wire_Format.Shift_Left (16#FF#, 1 mod 32)) /= 0 then
      -- optional string source_file = 2;
      if The_Message.Has_Source_File then
        Total_Size := Total_Size + 1 + Google.Protobuf.IO.Coded_Output_Stream.Compute_String_Size_No_Tag (The_Message.Source_File.all);
      end if;
      -- optional int32 begin = 3;
      if The_Message.Has_Begin_Pb then
        Total_Size := Total_Size + 1 + Google.Protobuf.IO.Coded_Output_Stream.Compute_Integer_32_Size_No_Tag (The_Message.Begin_Pb);
      end if;
      -- optional int32 end = 4;
      if The_Message.Has_End_Pb then
        Total_Size := Total_Size + 1 + Google.Protobuf.IO.Coded_Output_Stream.Compute_Integer_32_Size_No_Tag (The_Message.End_Pb);
      end if;
    end if;
    -- repeated int32 path = 1 [packed = true];
    declare
       Data_Size : Google.Protobuf.Wire_Format.PB_Object_Size := 0;
    begin
       for E of The_Message.Path loop
          Data_Size := Data_Size +  Google.Protobuf.IO.Coded_Output_Stream.Compute_Integer_32_Size_No_Tag (E);
       end loop;
       if Data_Size > 0 then
          Total_Size := Total_Size + 1 + Google.Protobuf.IO.Coded_Output_Stream.Compute_Integer_32_Size_No_Tag (Google.Protobuf.Wire_Format.PB_Int32 (Data_Size));
       end if;
       The_Message.Path_Cached_Byte_Size := Data_Size;
       Total_Size := Total_Size + Data_Size;
    end;

    The_Message.Cached_Size := Total_Size;
    return Total_Size;
  end Byte_Size;

  procedure Serialize_With_Cached_Sizes
     (The_Message   : in Google_Protobuf.GeneratedCodeInfo.Annotation.Instance;
      The_Coded_Output_Stream : in Google.Protobuf.IO.Coded_Output_Stream.Instance) is
  begin
    -- repeated int32 path = 1 [packed = true];
    if The_Message.Path_Size > 0 then
       The_Coded_Output_Stream.Write_Tag (1, Google.Protobuf.Wire_Format.LENGTH_DELIMITED);
       The_Coded_Output_Stream.Write_Raw_Varint_32 (Google.Protobuf.Wire_Format.PB_UInt32(The_Message.Path_Cached_Byte_Size));
    end if;
    for E of The_Message.Path loop
       The_Coded_Output_Stream.Write_Integer_32_No_Tag (E);
    end loop;
    -- optional string source_file = 2;
    if The_Message.Has_Source_File then
      The_Coded_Output_Stream.Write_String (2, The_Message.Source_File.all);
    end if;
    -- optional int32 begin = 3;
    if The_Message.Has_Begin_Pb then
      Google.Protobuf.IO.Coded_Output_Stream.Write_Integer_32 (The_Coded_Output_Stream, 3, The_Message.Begin_Pb);
    end if;
    -- optional int32 end = 4;
    if The_Message.Has_End_Pb then
      Google.Protobuf.IO.Coded_Output_Stream.Write_Integer_32 (The_Coded_Output_Stream, 4, The_Message.End_Pb);
    end if;
  end Serialize_With_Cached_Sizes;

  procedure Merge_Partial_From_Coded_Input_Stream
     (The_Message   : in out Google_Protobuf.GeneratedCodeInfo.Annotation.Instance;
      The_Coded_Input_Stream : in out Google.Protobuf.IO.Coded_Input_Stream.Instance) is

     Tag : Google.Protobuf.Wire_Format.PB_UInt32;
  begin
    Tag := The_Coded_Input_Stream.Read_Tag;
    while Tag /= 0 loop
      case Google.Protobuf.Wire_Format.Get_Tag_Field_Number (Tag) is
      -- repeated int32 path = 1 [packed = true];
      when 1 =>
        if Google.Protobuf.Wire_Format.Get_Tag_Wire_Type (Tag) =
          Google.Protobuf.Wire_Format.LENGTH_DELIMITED then
          declare
             use type Ada.Streams.Stream_Element_Offset;
             Length : Google.Protobuf.Wire_Format.PB_UInt32 :=  The_Coded_Input_Stream.Read_Raw_Varint_32;
             Limit  : Ada.Streams.Stream_Element_Offset := The_Coded_Input_Stream.Push_Limit (Ada.Streams.Stream_Element_Offset(Length));
          begin
             while The_Coded_Input_Stream.Get_Bytes_Until_Limit > 0 loop
                The_Message.Path.append (The_Coded_Input_Stream.Read_Integer_32);
             end loop;
             The_Coded_Input_Stream.Pop_Limit (Limit);
          end;
        end if;
      -- optional string source_file = 2;
      when 2 =>
        if Google.Protobuf.Wire_Format.Get_Tag_Wire_Type (Tag) =
          Google.Protobuf.Wire_Format.LENGTH_DELIMITED then
          declare
             procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
          begin
             if The_Message.Source_File /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
                Free (The_Message.Source_File);
             end if;
          end;
          The_Message.Set_Has_Source_File;
          The_Message.Source_File := The_Coded_Input_Stream.Read_String;
        end if;
      -- optional int32 begin = 3;
      when 3 =>
        if Google.Protobuf.Wire_Format.Get_Tag_Wire_Type (Tag) =
          Google.Protobuf.Wire_Format.VARINT then
          The_Message.Begin_Pb := The_Coded_Input_Stream.Read_Integer_32;
          The_Message.Set_Has_Begin_Pb;
        end if;
      -- optional int32 end = 4;
      when 4 =>
        if Google.Protobuf.Wire_Format.Get_Tag_Wire_Type (Tag) =
          Google.Protobuf.Wire_Format.VARINT then
          The_Message.End_Pb := The_Coded_Input_Stream.Read_Integer_32;
          The_Message.Set_Has_End_Pb;
        end if;
      when others =>
        declare
           Dummy : Google.Protobuf.Wire_Format.PB_Bool with Unreferenced;
        begin
           Dummy := The_Coded_Input_Stream.Skip_Field (Tag);
           return;
        end;
      end case;
      Tag := The_Coded_Input_Stream.Read_Tag;
    end loop;
  end Merge_Partial_From_Coded_Input_Stream;

  function Get_Cached_Size
     (The_Message : in Google_Protobuf.GeneratedCodeInfo.Annotation.Instance) return Google.Protobuf.Wire_Format.PB_Object_Size is
  begin
     return The_Message.Cached_Size;
  end Get_Cached_Size;

  overriding
  procedure Finalize (The_Message : in out Google_Protobuf.GeneratedCodeInfo.Annotation.Instance) is
  begin
    declare
       procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
    begin
       if The_Message.Source_File /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
          Free (The_Message.Source_File);
       end if;
    end;
  end Finalize;

  ---------------------------------------------------------------------------
  --                  Field accessor definitions                           --
  ---------------------------------------------------------------------------

  -- repeated int32 path = 1 [packed = true];
  function Path_Size
     (The_Message : in GeneratedCodeInfo.Annotation.Instance) return Google.Protobuf.Wire_Format.PB_Object_Size is
  begin
     return Google.Protobuf.Wire_Format.PB_Object_Size (The_Message.Path.Length);
  end Path_Size;

  procedure Clear_Path
     (The_Message : in out GeneratedCodeInfo.Annotation.Instance) is
  begin
    The_Message.Path.Clear;
  end Clear_Path;

  function Get_Path
     (The_Message : in GeneratedCodeInfo.Annotation.Instance;
      Index       : in Google.Protobuf.Wire_Format.PB_Object_Size) return Google.Protobuf.Wire_Format.PB_Int32 is
  begin
     return The_Message.Path.Element (Index);
  end Get_Path;

  procedure Set_Path
     (The_Message : in out GeneratedCodeInfo.Annotation.Instance;
      Index       : in Google.Protobuf.Wire_Format.PB_Object_Size;
      Value       : in Google.Protobuf.Wire_Format.PB_Int32) is
  begin
     The_Message.Path.Replace_Element (Index, Value);
  end Set_Path;

  procedure Add_Path
     (The_Message : in out GeneratedCodeInfo.Annotation.Instance;
      Value       : in Google.Protobuf.Wire_Format.PB_Int32) is
  begin
     The_Message.Path.Append (Value);
  end Add_Path;

  -- optional string source_file = 2;
  function Has_Source_File
     (The_Message : in GeneratedCodeInfo.Annotation.Instance) return Boolean is
  begin
     return (The_Message.Has_Bits(0) and 16#00000002#) /= 0;
  end Has_Source_File;

  procedure Set_Has_Source_File
     (The_Message : in out GeneratedCodeInfo.Annotation.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) or 16#00000002#;
  end Set_Has_Source_File;

  procedure Clear_Has_Source_File
     (The_Message : in out GeneratedCodeInfo.Annotation.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) and (not 16#00000002#);
  end Clear_Has_Source_File;

  procedure Clear_Source_File
     (The_Message : in out GeneratedCodeInfo.Annotation.Instance) is
  begin
    The_Message.Clear_Has_Source_File;
    declare
       procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
    begin
       if The_Message.Source_File /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
          Free (The_Message.Source_File);
       end if;
    end;
    The_Message.Source_File := Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access;
    The_Message.Clear_Has_Source_File;
  end Clear_Source_File;

  function Get_Source_File
     (The_Message : in GeneratedCodeInfo.Annotation.Instance) return Google.Protobuf.Wire_Format.PB_String is
  begin
     return The_Message.Source_File.all;
  end Get_Source_File;

  function Get_Source_File
     (The_Message : in out GeneratedCodeInfo.Annotation.Instance;
     Size        : in Integer := -1) return Google.Protobuf.Wire_Format.PB_String_Access is
  begin
     The_Message.Set_Has_Source_File;
     if Size >= 0 then
  declare
     procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
  begin
     if The_Message.Source_File /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        Free (The_Message.Source_File);
     end if;
  end;
         The_Message.Source_File := new Google.Protobuf.Wire_Format.PB_String'(1 .. Size => Character'Val (0));
         return The_Message.Source_File;
     end if;

     if The_Message.Source_File = Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        The_Message.Source_File := new String'(Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING);
      end if;
      return The_Message.Source_File;
  end Get_Source_File;

  procedure Set_Source_File
     (The_Message : in out GeneratedCodeInfo.Annotation.Instance;
      Value       : in Google.Protobuf.Wire_Format.PB_String) is
  begin
     The_Message.Set_Has_Source_File;
     if The_Message.Source_File /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access and then Value'Length = The_Message.Source_File.all'Length then
        The_Message.Source_File.all := Value;
     else
  declare
     procedure Free is new Ada.Unchecked_Deallocation (Google.Protobuf.Wire_Format.PB_String, Google.Protobuf.Wire_Format.PB_String_Access);
  begin
     if The_Message.Source_File /= Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        Free (The_Message.Source_File);
     end if;
  end;
        The_Message.Source_File := new Google.Protobuf.Wire_Format.PB_String'(Value);
     end if;
  end Set_Source_File;

  function Release_Source_File
     (The_Message : in out GeneratedCodeInfo.Annotation.Instance) return Google.Protobuf.Wire_Format.PB_String_Access is
  begin
     The_Message.Clear_Has_Source_File;
     if The_Message.Source_File = Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access then
        return null;
     else
        declare
           Temp : Google.Protobuf.Wire_Format.PB_String_Access := The_Message.Source_File;
        begin
           The_Message.Source_File := Google.Protobuf.Generated_Message_Utilities.EMPTY_STRING'Access;
           return Temp;
        end;
     end if;
  end Release_Source_File;

  -- optional int32 begin = 3;
  function Has_Begin_Pb
     (The_Message : in GeneratedCodeInfo.Annotation.Instance) return Boolean is
  begin
     return (The_Message.Has_Bits(0) and 16#00000004#) /= 0;
  end Has_Begin_Pb;

  procedure Set_Has_Begin_Pb
     (The_Message : in out GeneratedCodeInfo.Annotation.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) or 16#00000004#;
  end Set_Has_Begin_Pb;

  procedure Clear_Has_Begin_Pb
     (The_Message : in out GeneratedCodeInfo.Annotation.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) and (not 16#00000004#);
  end Clear_Has_Begin_Pb;

  procedure Clear_Begin_Pb
     (The_Message : in out GeneratedCodeInfo.Annotation.Instance) is
  begin
    The_Message.Begin_Pb := 0;
    The_Message.Clear_Has_Begin_Pb;
  end Clear_Begin_Pb;

  function Get_Begin_Pb (The_Message : in GeneratedCodeInfo.Annotation.Instance) return Google.Protobuf.Wire_Format.PB_Int32 is
  begin
     return The_Message.Begin_Pb;
  end Get_Begin_Pb;

  procedure Set_Begin_Pb (The_Message : in out GeneratedCodeInfo.Annotation.Instance; Value : in Google.Protobuf.Wire_Format.PB_Int32) is
  begin
     The_Message.Set_Has_Begin_Pb;
     The_Message.Begin_Pb := Value;
  end Set_Begin_Pb;

  -- optional int32 end = 4;
  function Has_End_Pb
     (The_Message : in GeneratedCodeInfo.Annotation.Instance) return Boolean is
  begin
     return (The_Message.Has_Bits(0) and 16#00000008#) /= 0;
  end Has_End_Pb;

  procedure Set_Has_End_Pb
     (The_Message : in out GeneratedCodeInfo.Annotation.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) or 16#00000008#;
  end Set_Has_End_Pb;

  procedure Clear_Has_End_Pb
     (The_Message : in out GeneratedCodeInfo.Annotation.Instance) is
  begin
     The_Message.Has_Bits(0) := The_Message.Has_Bits(0) and (not 16#00000008#);
  end Clear_Has_End_Pb;

  procedure Clear_End_Pb
     (The_Message : in out GeneratedCodeInfo.Annotation.Instance) is
  begin
    The_Message.End_Pb := 0;
    The_Message.Clear_Has_End_Pb;
  end Clear_End_Pb;

  function Get_End_Pb (The_Message : in GeneratedCodeInfo.Annotation.Instance) return Google.Protobuf.Wire_Format.PB_Int32 is
  begin
     return The_Message.End_Pb;
  end Get_End_Pb;

  procedure Set_End_Pb (The_Message : in out GeneratedCodeInfo.Annotation.Instance; Value : in Google.Protobuf.Wire_Format.PB_Int32) is
  begin
     The_Message.Set_Has_End_Pb;
     The_Message.End_Pb := Value;
  end Set_End_Pb;

end Google_Protobuf.GeneratedCodeInfo.Annotation;
--  end read only
